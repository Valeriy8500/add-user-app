{"version":3,"sources":["components/header/header.tsx","components/sideBar/sideBar.tsx","constans/constans.tsx","components/tableList/tableList.tsx","atomicComponents/input.tsx","components/userDetails/close_button.svg","components/userDetails/userDetails.tsx","shared/sharedFunction.ts","components/confirmModal/close_button.svg","components/confirmModal/confirmModal.tsx","components/content/plus.svg","components/content/content.tsx","components/app/app.tsx","index.tsx"],"names":["Header","className","SideBar","defaultInfo","secondName","name","middleName","email","login","id","headingsItems","inputsDefaultValues","defaultId","TableList","props","info","onDeletebtn","onShowbtn","InfoRow","React","useMemo","map","item","idx","String","type","title","onClick","i","TextField","placeholder","onChange","value","undefined","UserDetails","closeModal","saveData","setData","data","infoData","useState","disabled","setDisabled","onEsc","useCallback","evt","key","useEffect","document","addEventListener","removeEventListener","onChangeItem","e","target","trim","prev","style","backgroundImage","closeButton","onSubmit","preventDefault","newId","length","generateId","newData","onBtnOkHandler","form","ConfirmModal","setShowConfirmModal","onConfirmDelete","Content","JSON","parse","localStorage","getItem","setInfoData","showModal","setShowModal","showConfirmModal","setId","updateList","setItem","stringify","updateItem","itemId","changeItemIdx","findIndex","Number","finalData","before","slice","after","newArray","correctIdsArr","showData","filter","src","plus","alt","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e2bf647f.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nconst Header = (): React.ReactElement => {\n  return (\n    <header className='header'></header>\n  )\n};\n\nexport default Header;\n\n","import React from 'react';\nimport './sideBar.css';\n\nconst SideBar = (): React.ReactElement => {\n  return (\n    <div className='sidebar'></div>\n  )\n};\n\nexport default SideBar;","import {\n  IInfoData,\n  IDefaultId\n} from '../interfaces/interfaces';\n\nexport const defaultInfo: IInfoData[] = [\n  {\n    secondName: 'Иванов',\n    name: 'Иван',\n    middleName: 'Иванович',\n    email: 'mail1@mail.com',\n    login: 'user1',\n    id: 1\n  },\n  {\n    secondName: 'Петров',\n    name: 'Петр',\n    middleName: 'Сергеевич',\n    email: 'mail2@mail.com',\n    login: 'user2',\n    id: 2\n  },\n  {\n    secondName: 'Сергеев',\n    name: 'Григорий',\n    middleName: 'Викторович',\n    email: 'mail3@mail.com',\n    login: 'user3',\n    id: 3\n  },\n  {\n    secondName: 'Федоров',\n    name: 'Виктор',\n    middleName: 'Федорович',\n    email: 'mail4@mail.com',\n    login: 'user4',\n    id: 4\n  },\n  {\n    secondName: 'Хвастунов',\n    name: 'Сергей',\n    middleName: 'Петрович',\n    email: 'mail5@mail.com',\n    login: 'user5',\n    id: 5\n  },\n  {\n    secondName: 'Григорьев',\n    name: 'Федор',\n    middleName: 'Григорьевич',\n    email: 'mail6@mail.com',\n    login: 'user6',\n    id: 6\n  }\n];\n\nexport const headingsItems: string[] = [\n  'Фамилия',\n  'Имя',\n  'Отчество',\n  'E-mail',\n  'Логин'\n];\n\nexport const inputsDefaultValues: IInfoData = {\n  secondName: '',\n  name: '',\n  middleName: '',\n  email: '',\n  login: '',\n};\n\nexport const defaultId: IDefaultId = {\n  id: null\n};\n","import React from 'react';\nimport { headingsItems } from '../../constans/constans';\nimport { ITableListProps } from '../../interfaces/interfaces';\nimport './tableList.css';\n\nconst TableList = (props: ITableListProps): React.ReactElement => {\n\n  const {\n    info,\n    onDeletebtn,\n    onShowbtn\n  } = props;\n\n  const InfoRow = React.useMemo(() => {\n    return info.map((item, idx) => {\n      return (\n        <li className='main-content__item' key={idx}>\n          <span className='main-content__item-el'>{item.secondName}</span>\n          <span className='main-content__item-el'>{item.name}</span>\n          <span className='main-content__item-el'>{item.middleName}</span>\n          <span className='main-content__item-el'>{item.email}</span>\n          <span className='main-content__item-el'>{item.login}</span>\n          <div className='main-content__buttons-block'>\n            <button\n              id={String(item.id)}\n              className='main-content__show-btn far fa-edit'\n              type='button'\n              title='Редактировать'\n              onClick={() => onShowbtn(item.id!)}\n            />\n            <button\n              id={String(item.id)}\n              className='main-content__del-btn far fa-trash-alt'\n              type='button'\n              onClick={() => onDeletebtn(item.id!)}\n              title='Удалить' />\n          </div>\n        </li>\n      )\n    });\n  }, [\n    info,\n    onDeletebtn,\n    onShowbtn\n  ]);\n\n  return (\n    <ul className='main-content__table-list'>\n      <li className='main-content__item'>\n        {headingsItems.map((i) => <span className='main-content__item-el' key={i}>{i}</span>)}\n      </li>\n      {InfoRow}\n    </ul>\n  )\n};\n\nexport default TableList;\n","import React from 'react';\nimport { ITextField } from '../interfaces/interfaces';\n\nexport const TextField = (props: ITextField): React.ReactElement => {\n\n  const {\n    id,\n    className,\n    type,\n    placeholder,\n    onChange,\n    value\n  } = props;\n\n  return (\n    <div>\n      <input\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        className={className}\n        onChange={onChange}\n        value={value === null || value === undefined ? '' : value}\n      />\n    </div>\n  );\n};","export default __webpack_public_path__ + \"static/media/close_button.66cef32e.svg\";","import React from 'react';\nimport { TextField } from '../../atomicComponents/input';\nimport closeButton from './close_button.svg';\nimport { generateId } from '../../shared/sharedFunction';\nimport { IUserDetailsProps } from '../../interfaces/interfaces';\nimport './userDetails.css';\n\nconst UserDetails = (props: IUserDetailsProps): React.ReactElement => {\n\n  const {\n    closeModal,\n    saveData,\n    setData,\n    data,\n    infoData\n  } = props;\n\n  const [disabled, setDisabled] = React.useState<boolean>(true);\n\n  const onEsc = React.useCallback((evt: any) => {\n    if (evt.key !== 'Escape') {\n      return;\n    }\n    closeModal();\n  }, [closeModal]);\n\n  React.useEffect(() => {\n    document.addEventListener('keydown', onEsc);\n\n    return () => {\n      document.removeEventListener('keydown', onEsc)\n    }\n  }, [onEsc]);\n\n  React.useEffect(() => {\n    if (\n      data.secondName !== '' &&\n      data.name !== '' &&\n      data.middleName !== '' &&\n      data.email !== '' &&\n      data.login !== ''\n    ) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [data]);\n\n  const onBtnOkHandler = (e: React.FormEvent): void => {\n    e.preventDefault();\n    const newId = generateId(infoData);\n\n    const newData = {\n      secondName: data.secondName.trim(),\n      name: data.name.trim(),\n      middleName: data.middleName.trim(),\n      email: data.email.trim(),\n      login: data.login.trim(),\n      id: newId\n    };\n\n    saveData({ ...newData });\n    closeModal();\n  };\n\n  const onChangeItem = (id: string, e: React.ChangeEvent): void => {\n    const element = e.target as HTMLInputElement;\n    const { value } = element;\n\n    if (value.trim() === '') {\n      setData((prev) => ({ ...prev, [id]: '' }));\n    } else {\n      setData((prev) => ({ ...prev, [id]: value }));\n    }\n  };\n\n  return (\n    <div className=\"user-details\">\n      <div className='user-details__container'>\n        <div className='user-details__header'>\n          <h2 className='user-details__title'>Создание пользователя</h2>\n          <button\n            className='user-details__close-button'\n            style={{ backgroundImage: `url(${closeButton})` }}\n            onClick={() => closeModal()} />\n        </div>\n        <form\n          className='form'\n          id='form'\n          onSubmit={(e: React.FormEvent) => onBtnOkHandler(e)} >\n\n          <label className='form__label'>\n            Фамилия *\n            <TextField\n              id='secondName'\n              className='form__input'\n              type='text'\n              placeholder=' Введите фамилию'\n              onChange={(e: React.ChangeEvent) => onChangeItem('secondName', e)}\n              value={data.secondName} />\n          </label>\n\n          <label className='form__label'>\n            Имя *\n            <TextField\n              id='name'\n              className='form__input'\n              type='text'\n              placeholder=' Введите имя'\n              onChange={(e: React.ChangeEvent) => onChangeItem('name', e)}\n              value={data.name} />\n          </label>\n\n          <label className='form__label'>\n            Отчество *\n            <TextField\n              id='middleName'\n              className='form__input'\n              type='text'\n              placeholder=' Введите отчество'\n              onChange={(e: React.ChangeEvent) => onChangeItem('middleName', e)}\n              value={data.middleName} />\n          </label>\n\n          <label className='form__label'>\n            E-mail *\n            <TextField\n              id='email'\n              className='form__input'\n              type='text'\n              placeholder=' Введите электронную почту'\n              onChange={(e: React.ChangeEvent) => onChangeItem('email', e)}\n              value={data.email} />\n          </label>\n\n          <label className='form__label'>\n            Логин *\n            <TextField\n              id='login'\n              className='form__input'\n              type='text'\n              placeholder=' Введите логин'\n              onChange={(e: React.ChangeEvent) => onChangeItem('login', e)}\n              value={data.login} />\n          </label>\n\n          <p className='form_paragraph'>\n            Поля, помеченные * обязательны для заполнения\n          </p>\n        </form>\n\n        <div className='form__button-block'>\n          <button\n            className={disabled ? 'form__button form__button-dsbl' : 'form__button'}\n            disabled={disabled}\n            form='form'>\n            Готово\n          </button>\n          <button\n            className='form__button'\n            form='form'\n            onClick={closeModal}>\n            Отмена\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default UserDetails;\n\n","import { IInfoData } from '../interfaces/interfaces';\n\nexport function generateId(infoData: IInfoData[]): number {\n  let newId = 0;\n\n  if (infoData?.length) {\n    newId = infoData.length + 1;\n  } else {\n    newId = 1;\n  }\n  return newId;\n}\n","export default __webpack_public_path__ + \"static/media/close_button.66cef32e.svg\";","import React from 'react';\nimport closeButton from './close_button.svg';\nimport { IConfirmModalProps } from '../../interfaces/interfaces';\nimport './confirmModal.css';\n\nconst ConfirmModal = (props: IConfirmModalProps): React.ReactElement => {\n\n  const {\n    setShowConfirmModal,\n    onConfirmDelete\n  } = props;\n\n  const onEsc = React.useCallback((e: any) => {\n    if (e.key !== 'Escape') {\n      return;\n    }\n    setShowConfirmModal(prev => !prev);\n  }, [setShowConfirmModal]);\n\n  React.useEffect(() => {\n    document.addEventListener('keydown', onEsc);\n\n    return () => {\n      document.removeEventListener('keydown', onEsc)\n    }\n  }, [onEsc]);\n\n  return (\n    <div className=\"confirm-modal\">\n      <div className='confirm-modal__container'>\n        <div className='confirm-modal__header'>\n          <h2 className='confirm-modal__title'>\n            Подтверждение удаления\n          </h2>\n          <button\n            className='confirm-modal__close-button'\n            style={{ backgroundImage: `url(${closeButton})` }}\n            onClick={() => setShowConfirmModal(prev => !prev)} />\n        </div>\n        <div className='confirm-modal-content'>\n          Вы точно хотите удалить запись?\n        </div>\n        <div className='confirm-modal__footer'>\n          <button\n            className='confirm-modal__button'\n            type='submit'\n            onClick={() => onConfirmDelete()}>\n            Удалить\n          </button>\n          <button\n            className='confirm-modal__button'\n            type='button'\n            onClick={() => setShowConfirmModal(prev => !prev)}>\n            Отмена\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default ConfirmModal;","export default __webpack_public_path__ + \"static/media/plus.bdf6500d.svg\";","import React from 'react';\nimport SideBar from '../sideBar/sideBar';\nimport TableList from '../tableList/tableList';\nimport UserDetails from '../userDetails/userDetails';\nimport ConfirmModal from '../confirmModal/confirmModal';\nimport plus from './plus.svg';\nimport './content.css';\nimport {\n  IInfoData,\n  IDefaultId\n} from '../../interfaces/interfaces';\nimport {\n  defaultInfo,\n  defaultId,\n  inputsDefaultValues\n} from '../../constans/constans';\n\nconst Content = (): React.ReactElement => {\n  const [infoData, setInfoData] = React.useState<IInfoData[]>(() => {\n    // При 1 загрузке в качестве начального значения рендерится\n    // массив defaultInfo, а далее начальное значение,\n    // при перезагрузке будет-измененный массив из localStorage\n    const storageInfo = JSON.parse(localStorage.getItem('info')!);\n    return storageInfo || defaultInfo;\n  }); // стейт элементов таблицы\n\n  const [showModal, setShowModal] = React.useState<boolean>(false); // стейт открытия/закрытия модального окна\n  const [showConfirmModal, setShowConfirmModal] = React.useState<boolean>(false); // стейт открытия/закрытия ConfirmModal\n  const [id, setId] = React.useState<IDefaultId>(defaultId); // стейт id элемента по которому кликнули (для удаления)\n  const [data, setData] = React.useState<IInfoData>(inputsDefaultValues); // стейт изменяемого или добавляемого объекта\n\n  const updateList = React.useCallback((): void => {\n    // Добавление в localStorage новый массив с данными для отображения\n    localStorage.setItem('info', JSON.stringify(infoData));\n  }, [infoData]);\n\n  React.useEffect(() => {\n    updateList();\n  }, [updateList]);\n\n  const updateItem = React.useCallback((newData: IInfoData): void => {\n    // Редактирование строки\n    const itemId = data.id;\n    const changeItemIdx = infoData.findIndex((item) => {\n      return Number(item.id) === Number(itemId)\n    });\n    const finalData = { ...newData, id: itemId };\n    const before = infoData.slice(0, changeItemIdx);\n    const after = infoData.slice(changeItemIdx + 1);\n    const newArray = [...before, finalData, ...after];\n    setInfoData(newArray);\n  }, [data.id, infoData]);\n\n  const saveData = React.useCallback((newData: IInfoData): void => {\n    if (!data.id) {\n      // Создание строки\n      setInfoData(prev => {\n        return [...prev, newData];\n      });\n    } else {\n      // Редактирование строки\n      updateItem(newData);\n    }\n  }, [data.id, updateItem]);\n\n  const closeModal = React.useCallback((): void => {\n    // Закрытие модального окна\n    setData(inputsDefaultValues);\n    setShowModal(false);\n  }, []);\n\n  const onDeletebtn = React.useCallback((id: number): void => {\n    // Клик на кнопку удалить, вызов confirmModal\n    setShowConfirmModal((prev) => {\n      return !prev;\n    });\n    setId(() => ({\n      id: id\n    }))\n  }, []);\n\n  const onConfirmDelete = React.useCallback((): void => {\n    // Клик на кнопку удалить в confirmModal\n    const idx = infoData.findIndex((item) => {\n      return Number(item.id) === Number(id.id)\n    });\n    const before = infoData.slice(0, idx);\n    const after = infoData.slice(idx + 1);\n    const newArray = [...before, ...after];\n\n    const correctIdsArr = newArray.map((item, idx) => {\n      return { ...item, id: idx + 1 };\n    });\n\n    setInfoData(() => correctIdsArr);\n    setShowConfirmModal(prev => !prev);\n  }, [id.id, infoData]);\n\n  const onShowbtn = React.useCallback((id: number): void => {\n    // Клик на кнопку редактировать\n    const showData = infoData.filter((item) => {\n      return Number(item.id) === Number(id) ? item : null;\n    });\n\n    setData(showData[0]);\n    setShowModal(true);\n  }, [infoData]);\n\n  return (\n    <div className='content'>\n      <SideBar />\n      <div className='main-content'>\n        <div className='main-content__header'>\n          <h1 className='main-content__title'>Пользователи</h1>\n          <button\n            className='main-content__button'\n            onClick={() => setShowModal(true)}>\n            <img\n              className='main-content__icon-plus'\n              src={plus}\n              alt='плюс' />\n            Добавить\n          </button>\n        </div>\n\n        <TableList\n          info={infoData}\n          onDeletebtn={onDeletebtn}\n          onShowbtn={onShowbtn} />\n\n        {showModal &&\n          <UserDetails\n            closeModal={closeModal}\n            saveData={saveData}\n            data={data}\n            setData={setData}\n            infoData={infoData} />}\n\n        {showConfirmModal &&\n          <ConfirmModal\n            setShowConfirmModal={setShowConfirmModal}\n            onConfirmDelete={onConfirmDelete} />}\n      </div>\n    </div>\n  )\n};\n\nexport default Content;\n\n\n\n","import React from 'react';\nimport Header from '../header/header';\nimport Content from '../content/content';\nimport './app.css';\n\nconst App = (): React.ReactElement => {\n\n  return (\n    <div className='app'>\n      <Header />\n      <Content />\n    </div>\n  )\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n\n\n"],"sourceRoot":""}